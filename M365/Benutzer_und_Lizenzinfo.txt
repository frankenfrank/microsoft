# ----------------------------------------------------------------
# Version Alle Benutzer Gaeste und Funktionspostfächer_v1.9
# github.com/frankenfrank
#
# Voraussetzungen:
# Install-Module -Name ExchangeOnlineManagement -Scope CurrentUser
# Install-Module Microsoft.Graph -Scope CurrentUser
# ----------------------------------------------------------------
Clear-Host

# Kundennamen abfragen
Write-Host ""; Write-Host "Bitte gib den Kundennamen ein:" -ForegroundColor Green
$customerName = Read-Host
$customerName = $customerName -replace "\s+", "_"
#Write-Host "Kundenname: $customerName" -ForegroundColor Green
Write-Host " "
Write-Host "Kundenname (bereinigt):" $customerName -ForegroundColor White -BackgroundColor Blue
Write-Host " " -ForegroundColor White -BackgroundColor Black
Start-Sleep -Seconds 2

# Verbindung zu Microsoft Graph herstellen
Write-Host "Stelle Verbindung zu Microsoft Graph her..." -ForegroundColor Yellow
Start-Sleep -Seconds 2
Connect-MgGraph -Scopes "User.Read.All","Directory.Read.All","Organization.Read.All" -NoWelcome 

# Output-Pfad
$folderPath = "C:\temp\$customerName"
if (-not (Test-Path -Path $folderPath)) {
    New-Item -ItemType Directory -Path $folderPath | Out-Null
}
$filePath = Join-Path $folderPath "$customerName`_benutzerinfo.htm"

# Lizenzinformationen sammeln
Write-Host "Lizenzinformationen werden abgefragt..." -ForegroundColor Yellow
$licenses = Get-MgSubscribedSku

# Lizenznamen-Zuordnung (Standardnamen)
$skuIdToPartNumber = @{}
foreach ($license in $licenses) {
    $skuIdToPartNumber[$license.SkuId] = $license.SkuPartNumber
}

# Mapping von PartNumber zu lesbaren Lizenznamen
$skuPartNumberToFriendlyName = @{
    "O365_BUSINESS_PREMIUM" = "Microsoft 365 Business Standard"
    "ENTERPRISEPACK" = "Office 365 Enterprise E1"
    "ENTERPRISEPREMIUM" = "Office 365 Enterprise E3"
    "STANDARDPACK" = "Office 365 Enterprise E5"
    "EXCHANGE_SOLUTION" = "Exchange Online"
    "OFFICE_SUBSCRIPTION" = "Office Apps"
    "O365_BUSINESS_ESSENTIALS" = "Microsoft 365 Business Basic"
    "SPB" = "Microsoft 365 Business Premium"
    "Microsoft_365_Business_Basic_EEA_(no_Teams)" = "Microsoft 365 Business Premium EEA (kein Teams)"
    "Microsoft_365_Business_Premium_(no_Teams)" = "Microsoft 365 Business Premium (ohne Teams)"
    "EXCHANGESTANDARD" = "Exchange Online (Plan 1)"
    "FLOW_FREE" = "Microsoft Power Automate, kostenlos"
    "MCOPSTNC" = "Kommunikationsguthaben"
    "POWERAPPS_VIRAL" = "Microsoft Power Apps Plan 2 - Testversion"
    "RIGHTSMANAGEMENT_ADHOC" = "Rights Management Adhoc"
    "SPZA_IW" = "App Connect IW"
    "WINDOWS_STORE" = "Windows Store für Unternehmen"
    "ATP_ENTERPRISE" = "Microsoft Defender for Office 365 (Plan 1)"
    "CPC_E_2C_4GB_64GB​" = "Windows 365 Enterprise 2 vCPU, 4 GB, 64 GB"
    "Microsoft_Teams_Audio_Conferencing_select_dial_out" = "Microsoft Teams Audio Conferencing includes dial-out to USA/CAN only"
    "Microsoft_365_Copilot" = "Microsoft 365 Copilot"
    #"Name" = "Text"
    
    
# Weitere Namen unter https://learn.microsoft.com/de-de/entra/identity/users/licensing-service-plan-reference
}


# Benutzerinformationen sammeln
Write-Host "Benutzerinformationen werden abgefragt..." -ForegroundColor Yellow
$allUsers = Get-MgUser -All -Property "DisplayName,UserPrincipalName,AccountEnabled,UserType,Mail,AssignedLicenses,MailNickname"

# HTML vorbereiten
$currentDateTime = (Get-Date).ToString("dd.MM.yyyy HH:mm 'Uhr'")
$htmlContent = @"
<!DOCTYPE html>
<html lang=\"de\">
<head>
<meta charset=\"UTF-8\"><title>Benutzer- und Lizenzreport - $customerName</title>
<style>
    body { font-family: 'Trebuchet MS'; text-align: center; }
    table { margin: auto; width: 90%; border-collapse: collapse; font-size: 12px; }
    th, td { border: 1px solid black; padding: 8px; text-align: left; word-wrap: break-word; }
    th { background-color: #f2f2f2; }
    tr:nth-child(even) { background-color: #f9f9f9; }
    #searchInput { margin-bottom: 12px; padding: 8px; width: 300px; }
</style>
<script>
function searchTable() {
    var input = document.getElementById('searchInput').value.toLowerCase();
    var rows = document.getElementById('userTable').rows;
    var count = 0;
    for (let i = 1; i < rows.length; i++) {
        let show = false;
        for (let j = 0; j < rows[i].cells.length; j++) {
            if (rows[i].cells[j].innerText.toLowerCase().includes(input)) show = true;
        }
        rows[i].style.display = show ? '' : 'none';
        if (show) count++;
    }
    document.getElementById('resultCount').innerText = count + ' Ergebnisse gefunden';
}
</script>
</head>
<body>
<h1>Benutzer- und Lizenzreport für $customerName</h1>
<p>Erstellt am: $currentDateTime</p>
<h2>Lizenzen</h2>
<table><tr><th>Lizenzname</th><th>Verwendet</th><th>Gesamt</th></tr>
"@

# Lizenzübersicht
foreach ($lic in $licenses) {
    $partNumber = $lic.SkuPartNumber
    $friendlyName = $skuPartNumberToFriendlyName[$partNumber]
    if (-not $friendlyName) { $friendlyName = $partNumber }
    $htmlContent += "<tr><td>$friendlyName</td><td>$($lic.ConsumedUnits)</td><td>$($lic.PrepaidUnits.Enabled)</td></tr>"
}

$htmlContent += @"
</table>
<h2>Benutzer</h2>
<input type='text' id='searchInput' onkeyup='searchTable()' placeholder='Suche...'>
<span id='resultCount'>0 Ergebnisse gefunden</span>
<table id='userTable'>
<tr><th>Name</th><th>E-Mail</th><th>Status</th><th>Typ</th><th>Lizenzen</th></tr>
"@

# Benutzerinformationen und Lizenznamen abgleichen
foreach ($user in $allUsers) {
    $status = if ($user.AccountEnabled) { "Aktiv" } else { "Blockiert" }
    $type = switch ($user.UserType) {
        "Guest" { "Gast" }
        default {
            if (-not $user.AssignedLicenses -and $user.MailNickname -notlike "Room*") { "Freigegebenes Postfach" } else { "Benutzer" }
        }
    }

    # Lizenzen des Benutzers in Namen umwandeln
    $assignedLicenses = if ($user.AssignedLicenses) {
        ($user.AssignedLicenses | ForEach-Object { 
            $partNumber = $skuIdToPartNumber[$_.SkuId]
            $friendlyName = $skuPartNumberToFriendlyName[$partNumber]
            if (-not $friendlyName) {
                $friendlyName = if ($partNumber) { $partNumber } else { $_.SkuId }
            }
            $friendlyName
        }) -join "<br>"
    } else { "" }

    $htmlContent += "<tr><td>$($user.DisplayName)</td><td>$($user.Mail)</td><td>$status</td><td>$type</td><td>$assignedLicenses</td></tr>"
}

$htmlContent += @"
</table>
</body>
</html>
"@

# HTML speichern
$htmlContent | Out-File -FilePath $filePath -Encoding UTF8
Start-Process $filePath

# Sitzung trennen
Disconnect-MgGraph
Write-Host " "
Write-Host "- - - - - - - - - - - - - - - - - - - - - - - - - - -"
Write-Host "Fertig. Datei gespeichert unter:" -ForegroundColor White
Write-Host "   $filePath" -ForegroundColor White
Write-Host " "
