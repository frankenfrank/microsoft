
# ----------------------------------------------------------------
# Version: Unternehmensanwendungen_v1.3
# github.com/frankenfrank
#
# Voraussetzungen:
# Powershell 7
# Install-Module -Name Microsoft.Graph -Scope CurrentUser -Force
# https://learn.microsoft.com/en-us/powershell/microsoftgraph/installation?view=graph-powershell-1.0
#
# GUI im Entra
# https://entra.microsoft.com/ -> Anwendungen -> Unternehmensanwendungen
# ----------------------------------------------------------------
Clear-Host

# Offene Verbindungen von benötigten Diensten trennen
#Disconnect-AzureAD -ErrorAction SilentlyContinue
#Disconnect-MgGraph -ErrorAction SilentlyContinue

# Abfrage des Kundennamens am Anfang
Write-Host ""
Write-Host "Bitte gib den Kundennamen ein:" -ForegroundColor Yellow
$CustomerName = Read-Host
$CustomerName = $CustomerName -replace "\s+", "_"  # Leerzeichen durch Unterstriche ersetzen
Write-Host " "
Write-Host "Kundenname (bereinigt):" $CustomerName -ForegroundColor White -BackgroundColor Blue
Write-Host " " -ForegroundColor White -BackgroundColor Black
Start-Sleep -Seconds 2


# Ausgabe-Datei und Speicherort
$OutputDir = "C:\temp\$CustomerName"
$OutputFile = "$OutputDir\$CustomerName-UnternehmensApps.htm"

# Erstellen des Ausgabeordners, falls nicht vorhanden
if (-not (Test-Path $OutputDir)) {
    New-Item -ItemType Directory -Path $OutputDir
}

# Anmeldung bei Microsoft Graph mit GUI (für richtigen Tenant auswählen)
# M365-Anwendungen abfragen (Administratorrechte erforderlich)
Write-Host "Verbinden mit den Diensten (auf offene Fenster achten)" -ForegroundColor Yellow
Connect-AzureAD
Connect-MgGraph -Scopes "Application.Read.All", "Directory.Read.All" -NoWelcome

# Meldung anzeigen, weil es eine Weile dauert
Write-Host "Die Daten werden aufbereitet, das kann ein paar Minuten dauern..."  -ForegroundColor Yellow
Write-Host "Die Auswertung wird automatisch im Standardbrowser geoeffnet."  -ForegroundColor Yellow
Write-Host ""  -ForegroundColor Yellow

# Alle Service Principals abrufen und sortieren nach DisplayName
$ServicePrincipals = Get-MgServicePrincipal -All | Where-Object {
    $_.ServicePrincipalType -eq "Application" -and
    (Get-MgServicePrincipalAppRoleAssignedTo -ServicePrincipalId $_.Id).Count -gt 0
} | Sort-Object DisplayName | Select-Object Id, DisplayName


# Liste für das Ergebnis initialisieren
$ResultList = @()

# Für jeden Service Principal die zugewiesenen Benutzer abfragen
foreach ($sp in $ServicePrincipals) {
    $AppRoleAssignments = Get-MgServicePrincipalAppRoleAssignedTo -ServicePrincipalId $sp.Id

    if ($AppRoleAssignments.Count -eq 0) {
        # Keine Benutzer zugewiesen
        $ResultList += [PSCustomObject]@{
            Application        = $sp.DisplayName
            ApplicationID      = $sp.Id
            AssignedPrincipals = "Keine Benutzer gefunden"
        }
    }
    else {
        # Benutzer vorhanden, Details hinzufügen
        $userList = ($AppRoleAssignments | ForEach-Object { $_.PrincipalDisplayName }) -join "<br />"
        $ResultList += [PSCustomObject]@{
            Application        = $sp.DisplayName
            ApplicationID      = $sp.Id
            AssignedPrincipals = $userList
        }
    }
}

# HTML-Ausgabe erstellen
$ErstellDatum = (Get-Date).ToString("dd.MM.yyyy HH:mm:ss")
$HTMLContent = @"
<!DOCTYPE html>
<html>
<head>
    <style>
        body { font-family: Trebuchet MS; font-size: 12px; margin-left: 30px;}
        h1 { text-align: center; }
        p { text-align: left; }

        /* Infobox angepasst: schmaler und linksbündig */
        .infobox { 
            background-color: #e6f7ff; 
            border: 1px solid #b3d7ff; 
            padding: 10px; 
            margin: 10px 0; 
            width: 80%;  /* Breite auf 80% gesetzt */
            margin-left: 5px;
            margin-right: auto;
            text-align: left;
        }

        /* Tabelle zentriert und maximal 95% Breite */
        table { 
            width: 95%; 
            max-width: 95%; 
            margin: 20px auto; 
            border-collapse: collapse; 
        }

        th, td { 
            border: 1px solid black; 
            padding: 8px; 
            text-align: left; 
        }

        tr:nth-child(even) { background-color: #f2f2f2; }
        tr:nth-child(odd) { background-color: #ffffff; }

        th { 
            background-color: #777777; 
            color: white; 
            font-size: 14px;
        }

        /* Schiebeschalter */
        .switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 34px;
        }

        .switch input { 
            opacity: 0; 
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: 0.4s;
            border-radius: 34px;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            border-radius: 50%;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: 0.4s;
        }

        input:checked + .slider {
            background-color: #4CAF50;
        }

        input:checked + .slider:before {
            transform: translateX(26px);
        }

        /* Filter-Status */
        .filter-status {
            font-weight: bold; 
            color: #333;
        }
    </style>
</head>
<body>
    <h1>Unternehmensanwendungen - $CustomerName</h1>
    <div class="infobox">
        <strong>Erklärung:</strong> Diese Liste zeigt alle sog. Enterprise applications, die in Ihrem Unternehmen genutzt werden und bei Microsoft registriert sind. Zu jeder Anwendung sehen Sie den Namen, eine eindeutige ID und die Benutzer, die darauf Zugriff haben.<br><br>
        <strong>Risiken:</strong> Unnötig aktive Anwendungen erhöhen das Risiko von Datenlecks, unbefugtem Zugriff und Sicherheitslücken. Drittanbieter-Apps sollten sorgfältig geprüft werden. Durch regelmäßige Kontrolle und das Entfernen unnötiger Apps lässt sich das Risiko deutlich verringern.<br><br>
        <strong>Beispiel:</strong> Wenn es zu einem Angriff auf die Infrastruktur einer Enterprise application kommt und die App kompromittiert wird, könnte ein Angreifer theoretisch auf die geschäftlichen Daten des Unternehmens zugreifen. Das liegt daran, dass die Enterprise application dieser App im Unternehmen registriert ist und somit als vertrauenswürdig gilt, wodurch sie Zugriff auf sensible Unternehmensdaten wie E-Mails, Dokumente oder andere Ressourcen hat.<br><br>
		<details>
    <summary>Für mögliche Maßnahmen aufklappen</summary>
    <p>Möglichkeiten zur Registrierung einer Enterprise Application<p>
	<p>Für den M365 Tenant bestehen folgende Möglichkeiten, für Benutzer eine Enterprise Application zu registrieren:</p>
    
    <p><strong>Benutzerberechtigungen nicht zulassen (empfohlen):</strong>  
    Ein Administrator wird für alle Apps benötigt. Die Anfrage zur Zustimmung kann direkt an ausgewählte Personen gesendet werden. Diese können dann die App prüfen. Nur Benutzer mit der Rolle Globaler-, Anwendungs- oder Cloud-Anwendungsadministrator können die Zustimmung erteilen.</p>

    <p><strong>Benutzerberechtigungen für Apps von verifizierten Herausgebern und ausgewählte Berechtigungen zulassen:</strong>  
    Alle Benutzer können Berechtigungen für als „geringes Risiko“ eingestufte Berechtigungen erteilen, für Apps von verifizierten Herausgebern oder in dieser Organisation registrierte Apps.</p>

    <p><strong>Benutzerberechtigungen für Apps zulassen:</strong>  
    Alle Benutzer können jeder App die Berechtigung zum Zugriff auf die Daten der Organisation erteilen.</p>
</details>
	</div>
    <p>Erstellt am: $ErstellDatum Uhr</p>
    <table>
        <tr>
            <th>Anwendungsname</th>
            <th>Anwendungs-ID</th>
            <th>Zugewiesene Benutzer</th>
        </tr>
"@

# HTML-Erstellung vorbereiten
foreach ($result in $ResultList) {
    $appName = $result.Application
    $appID = $result.ApplicationID
    $userList = $result.AssignedPrincipals

    # HTML-Zeile hinzufügen
    $HTMLContent += "<tr class='app-row'><td>$appName</td><td>$appID</td><td class='user-cell'>$userList</td></tr>"
}

$HTMLContent += @"
    </table>
</body>
</html>
"@

# Speichern der HTML-Datei
$HTMLContent | Out-File -Encoding utf8 -FilePath $OutputFile

# Datei öffnen
Start-Process $OutputFile

#Abmelden von den Diensten
Disconnect-MgGraph
Disconnect-AzureAD

Write-Host " "
Write-Host "- - - - - - - - - - - - - - - - - - - - - - - - - - -"
Write-Host "Fertig. Die Ergebnisse wurden gespeichert unter:" -ForegroundColor White
Write-Host "   $filePath" -ForegroundColor White
Write-Host " "

